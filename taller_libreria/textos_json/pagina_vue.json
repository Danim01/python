{"Parrafo 1": "Vue (pronunciado /vju\u02d0/, como view) es un framework progresivo para construir interfaces de usuario. A diferencia de otros frameworks monol\u00edticos, Vue est\u00e1 dise\u00f1ado desde cero para ser utilizado incrementalmente. La librer\u00eda central est\u00e1 enfocada solo en la capa de visualizaci\u00f3n, y es f\u00e1cil de utilizar e integrar con otras librer\u00edas o proyectos existentes. Por otro lado, Vue tambi\u00e9n es perfectamente capaz de impulsar sofisticadas Single-Page Applications cuando se utiliza en combinaci\u00f3n con herramientas modernas y librer\u00edas de apoyo.", "Parrafo 2": "Si desea obtener m\u00e1s informaci\u00f3n sobre Vue antes de profundizar, creamos un video paseando a trav\u00e9s de los principios b\u00e1sicos, con un proyecto de ejemplo.", "Parrafo 3": "Si usted es un desarrollador frontend experimentado y desea saber c\u00f3mo Vue se compara con otras librer\u00edas/frameworks, consulte la Comparaci\u00f3n con Otros Frameworks.", "Parrafo 4": "La gu\u00eda oficial asume conocimientos de nivel intermedio de HTML, CSS y JavaScript. Si usted es totalmente nuevo en el desarrollo frontend, puede que no sea la mejor idea saltar directamente a un framework como su primer paso - \u00a1capte lo b\u00e1sico y luego vuelva! La experiencia previa con otros frameworks ayuda, pero no es necesaria.", "Parrafo 5": "La forma m\u00e1s f\u00e1cil de probar Vue.js es usando el ejemplo Hola Mundo en JSFiddle. Si\u00e9ntase libre de abrirlo en otra pesta\u00f1a y seguirlo mientras analizamos algunos ejemplos b\u00e1sicos. O puede crear un archivo index.html e incluir Vue con:", "Parrafo 6": "o con:", "Parrafo 7": "La p\u00e1gina de instalaci\u00f3n proporciona m\u00e1s opciones de instalaci\u00f3n de Vue. Nota: No recomendamos que los principiantes comiencen con vue-cli, especialmente si a\u00fan no est\u00e1n familiarizados con las herramientas de build basadas en Node.js.", "Parrafo 8": "Si prefiere algo m\u00e1s interactivo, tambi\u00e9n puede ver esta serie de tutoriales en Scrimba, que le ofrece una combinaci\u00f3n de screencast y playground de c\u00f3digo con los que puede pausar y jugar en cualquier momento.", "Parrafo 9": "En el n\u00facleo de Vue.js se encuentra un sistema que nos permite procesar datos de forma declarativa al DOM mediante una sintaxis de plantilla sencilla:", "Parrafo 10": "\u00a1Ya hemos creado nuestra primera aplicaci\u00f3n Vue! Esto parece bastante similar a la representaci\u00f3n de un template string, pero Vue ha hecho mucho trabajo por debajo. Los datos y el DOM ahora est\u00e1n vinculados, y todo ahora es reactivo. \u00bfC\u00f3mo sabemos? Abra la consola de JavaScript de su navegador (ahora mismo, en esta p\u00e1gina) y cambie el valor de app.message a un valor diferente. Deber\u00eda ver que el ejemplo se ha renderizado con el nuevo valor que acaba de ingresar.", "Parrafo 11": "Adem\u00e1s de la interpolaci\u00f3n de texto, tambi\u00e9n podemos enlazar atributos de elementos como este:", "Parrafo 12": "Aqu\u00ed nos encontramos con algo nuevo. El atributo v-bind que est\u00e1 viendo se llama directiva. Las directivas tienen el prefijo v- para indicar que son atributos especiales proporcionados por Vue, y como puede haber adivinado, aplican un comportamiento reactivo especial al DOM representado. Aqu\u00ed, b\u00e1sicamente se dice \u201cmantener el atributo title de este elemento actualizado con la propiedad message en la instancia de Vue\u201d.", "Parrafo 13": "Si vuelve a abrir la consola de JavaScript e ingresa app2.message = 'some new message', ver\u00e1 una vez m\u00e1s que el HTML enlazado, en este caso el atributo title, se ha actualizado.", "Parrafo 14": "Tambi\u00e9n es f\u00e1cil alternar la presencia de un elemento:", "Parrafo 15": "Contin\u00faa y escribe app3.seen = false en la consola. Deber\u00edas ver el mensaje desaparecer.", "Parrafo 16": "Este ejemplo demuestra que podemos vincular datos no solo con el texto y los atributos, sino tambi\u00e9n con la estructura del DOM. Adem\u00e1s, Vue tambi\u00e9n proporciona un potente sistema de efectos de transici\u00f3n que puede aplicar autom\u00e1ticamente efectos de transici\u00f3n cuando los elementos son insertados, actualizados o eliminados por Vue.", "Parrafo 17": "Hay bastantes otras directivas, cada una con su propia funcionalidad especial. Por ejemplo, la directiva v-for se puede usar para mostrar una lista de elementos utilizando los datos de un Array:", "Parrafo 18": "En la consola, ingrese app4.todos.push ({text: 'Nuevo elemento'}). Deber\u00eda ver un nuevo elemento agregado a la lista.", "Parrafo 19": "Para permitir que los usuarios interact\u00faen con su aplicaci\u00f3n, podemos usar la directiva v-on para adjuntar escuchas de eventos que invocan m\u00e9todos en nuestras instancias de Vue:", "Parrafo 20": "{{ message }}", "Parrafo 21": "Tenga en cuenta que en este m\u00e9todo, actualizamos el estado de nuestra aplicaci\u00f3n sin tocar el DOM: Vue maneja todas las manipulaciones del DOM y el c\u00f3digo que usted escribe se enfoca en la l\u00f3gica subyacente.", "Parrafo 22": "Vue tambi\u00e9n proporciona la directiva v-model que hace que el enlace bidireccional entre los controles de los formularios y el estado de la aplicaci\u00f3n sea muy sencilla:", "Parrafo 23": "{{ message }}", "Parrafo 24": "El sistema de componentes es otro concepto importante en Vue, porque es una abstracci\u00f3n que nos permite crear aplicaciones a gran escala compuestas de componentes peque\u00f1os, independientes y, a menudo, reutilizables. Si lo pensamos, casi cualquier tipo de interfaz de aplicaci\u00f3n se puede abstraer en un \u00e1rbol de componentes:", "Parrafo 25": "", "Parrafo 26": "En Vue, un componente es esencialmente una instancia de Vue con opciones predefinidas. Registrar un componente en Vue es sencillo:", "Parrafo 27": "Ahora puedes incluirlo en el template de otro componente:", "Parrafo 28": "Pero esto supondr\u00eda tener el mismo texto para cada tarea, que no es muy interesante. Es posible que se pueda pasar datos de un scope o contexto padre a uno secundario en los componentes hijos. Modifique la configuraci\u00f3n del componente para que acepte una propiedad:", "Parrafo 29": "Ahora podemos pasar la tarea a cada componente repetido usando v-bind:", "Parrafo 30": "Este es un ejemplo ficticio, pero hemos logrado separar nuestra aplicaci\u00f3n en dos unidades m\u00e1s peque\u00f1as, y el componente hijo est\u00e1 razonablemente bien desacoplado del componente padre a trav\u00e9s de la interfaz de propiedades. Ahora podemos mejorar a\u00fan m\u00e1s nuestro componente <todo-item> con un template y l\u00f3gica m\u00e1s complejas sin afectar la aplicaci\u00f3n principal.", "Parrafo 31": "En una aplicaci\u00f3n grande, es necesario dividir toda la aplicaci\u00f3n en componentes para que el desarrollo sea manejable. Hablaremos mucho m\u00e1s sobre los componentes m\u00e1s adelante en la gu\u00eda, pero aqu\u00ed hay un ejemplo (imaginario) de c\u00f3mo se ver\u00eda el template de una aplicaci\u00f3n con componentes:", "Parrafo 32": "Es posible que haya notado que los componentes de Vue son muy similares a Elementos personalizados, que forman parte de las Especificaciones de Componentes Web. Esto se debe a que la sintaxis de los componentes de Vue est\u00e1 modelada de forma flexible seg\u00fan la especificaci\u00f3n. Por ejemplo, los componentes de Vue implementan la API de Slot y el atributo especial is. Sin embargo, hay algunas diferencias clave:", "Parrafo 33": "La especificaci\u00f3n de componentes web se ha finalizado, pero no se implementa de forma nativa en todos los navegadores. Safari 10.1+, Chrome 54+ y Firefox 63+ soportan de forma nativa los componentes web. En comparaci\u00f3n, los componentes de Vue no requieren polyfills y funcionan de manera consistente en todos los navegadores compatibles (IE9 y superiores). Cuando sea necesario, los componentes de Vue tambi\u00e9n se pueden envolver dentro de un elemento personalizado nativo.", "Parrafo 34": "Los componentes de Vue proporcionan caracter\u00edsticas importantes que no est\u00e1n disponibles en elementos personalizados sencillos, especialmente el flujo de datos de componentes cruzados, la comunicaci\u00f3n de eventos personalizados y las integraciones de herramientas de construcci\u00f3n.", "Parrafo 35": "Hemos presentado brevemente las funciones m\u00e1s b\u00e1sicas del n\u00facleo de Vue.js. El resto de esta gu\u00eda tratar\u00e1 estas y otras funciones avanzadas con detalles mucho m\u00e1s precisos, \u00a1as\u00ed que aseg\u00farese de leer todo esto!"}